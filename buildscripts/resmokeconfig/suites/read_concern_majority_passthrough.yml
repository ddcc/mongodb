selector:
  js_test:
    roots:
    - jstests/core/*.js
    exclude_files:
    # These tests are not expected to pass with replica-sets:
    - jstests/core/dbadmin.js
    - jstests/core/opcounters_write_cmd.js
    - jstests/core/read_after_optime.js
    - jstests/core/capped_update.js
    # These tests use benchRun(), which isn't configured to use the overridden writeConcern.
    - jstests/core/bench_test*.js
    exclude_with_any_tags:
    ##
    # The next three tags correspond to the special errors thrown by the
    # set_read_and_write_concerns.js override when it refuses to replace the readConcern or
    # writeConcern of a particular command. Above each tag are the message(s) that cause the tag to
    # be warranted.
    ##
    # "Cowardly refusing to override read concern of command: ..."
    - assumes_read_concern_unchanged
    # "Cowardly refusing to override write concern of command: ..."
    - assumes_write_concern_unchanged
    # "Cowardly refusing to run test with overridden write concern when it uses a command that can
    #  only perform w=1 writes: ..."
    - requires_collmod_command
    - requires_eval_command

executor:
  js_test:
    config:
      shell_options:
        global_vars:
          TestData:
            defaultReadConcernLevel: majority
        eval: >-
          var testingReplication = true;
          load('jstests/libs/override_methods/set_read_and_write_concerns.js');
        readMode: commands
    hooks:
    # The CheckReplDBHash hook waits until all operations have replicated to and have been applied
    # on the secondaries, so we run the ValidateCollections hook after it to ensure we're
    # validating the entire contents of the collection.
    - class: CheckReplDBHash
    - class: ValidateCollections
    - class: CleanEveryN
      n: 20
    fixture:
      class: ReplicaSetFixture
      mongod_options:
        set_parameters:
          enableTestCommands: 1
        enableMajorityReadConcern: ''
      num_nodes: 2
